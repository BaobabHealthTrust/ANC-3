<script language="javascript" type="text/javascript" src="/javascripts/jquery.js"></script>
<link rel="stylesheet" href="/stylesheets/yes_no_btn.css" type="text/css">
<style type="text/css">
  td #Unknown {
    display: none;
  }
  #summary{
    font-size: 1.8em;
    padding: 25px;
  }
  #summary .value{
    color: red;
    font-style: italic;
  }
  .options {
    height: inherit;
  }
  .labelText {
    font-size: 23px;
    vertical-align: middle;
    padding-left: 20px;
  }

  #divcontent {
    background-color: #fff;
    border: 2px solid #ccf;
    border-radius: 10px;
    height: 84%;
    margin: 10px;
    overflow: hidden;
    width: 98%;
  }

  #divScroller {
    height: 97%;
    margin: 10px;
    overflow: auto;
    width: 98%;
  }

  .disabled-li{
    text-decoration: line-through;
    color: gray !important;
  }
</style>
<script type="text/javascript" language="javascript">
  <!--
  tt_cancel_show = "/patients/show/<%= @patient.id %>";
  tt_cancel_destination = "/patients/show/<%= @patient.id %>";
  var timedEvent;
  var parsedConceptName;
  var leucocytesTest;
  var glucoseTest;
  var rapidRecencyAssayHash = {};
<% rapid_recency_assay_array = ["Line 1. Control Line Present","Line 2. Positive Verification Line Present","Line 3. Long-Term Line Present"] %>

<% rapid_recency_assay_array.each do |rapid_recency| %>
    rapidRecencyAssayHash['<%= rapid_recency %>'] = {yes: '', no: ''}
<% end %>

  //-->
<%
status = @hiv_status rescue nil
art_status = @on_art rescue nil
arv_number = @arv_number rescue nil
start_date = @art_start_date rescue nil
@available_test_results = [
  ["HB", "HB Test Result"],["Syphilis", "Syphilis Test Result"],
  ["Urine", "Urine Test Results"],["Malaria", "Malaria Test Result"],
  ["Blood Group", "Blood Group Test Result"]]
%>

  function readableMessage(){

    var conceptName = conceptHash[tstCurrentPage]
    conceptName = (parsedConceptName && parsedConceptName.length > 1) ? parsedConceptName : conceptName;
    conceptName = (conceptName.toLowerCase() == "parity")? "Number of Pregnancies" : conceptName;

    try{
      // conceptName = conceptName.charAt(0).toUpperCase() + conceptName.slice(1).toLowerCase();
      if(__$("messageBar") && !__$("messageBar").innerHTML.match(conceptName)){
        __$("messageBar").innerHTML = __$("messageBar").innerHTML.replace("Value", conceptName + " Value").replace("value", conceptName + " value").replace("a " + conceptName + " value", conceptName + " value")
      }
    }catch(ex){}

    setTimeout(function(){ readableMessage()}, 50);
  }

  function buildConceptsHash(){
    var count = 0;
    var inputArr = document.getElementsByTagName("input")
    conceptHash = {};
    for (var i = 0; i < inputArr.length; i ++){
      if (inputArr[i].name && inputArr[i].name.match("concept_name") && inputArr[i].name.match("observations")){
        conceptHash[count] = inputArr[i].value;
        count ++;
      }
    }
  }

  function transformMessages(){
    buildConceptsHash();
    setTimeout(function(){ readableMessage()}, 50);
  }

  function checkHIVTestUnknown(){
    // Asked to disable this
    return false;
    if($("new_test_result_at_current_facility").value.toLowerCase() == "not done"){

      showMessage("Patient needs to be tested now!", true);
      return true;
    }
    return false;
  }

  function checkHIVTestDate(){
    if (__$('new_test_result_at_current_facility').value == 'Positive'){
      return false;
    }

    var hiv_test_date_str = __$("prev_hiv_test_date").value.replace(/-/g, '/');

    var hiv_test_date     = new Date(hiv_test_date_str);
    var today             = new Date("<%= (session[:datetime] ? session[:datetime].to_date : Date.today).strftime("%Y-%m-%d") %>");

    var weeks_ago = parseInt((today.getTime()- hiv_test_date.getTime())/ (1000 * 60 * 60 * 24 * 7));
    //console.log(weeks_ago)
    if (weeks_ago > 12){
      //showMessage("Patient needs to be tested again");
      return true;
    }

    return false;
  }

  function unknownToNotDone(){
    __$("Unknown").innerHTML = "<span>Not Done</span>";
    __$("Unknown").onmousedown = function(){
      __$("touchscreenInput" + tstCurrentPage).value = "";
      press("Not Done");
    }
  }

  function getSelected(){
    var choices = "";

    if(__$('choice')){
      for(var o = 0; o < __$('choice').options.length; o++){
        if(__$('choice').options[o].selected == true){
          choices += __$('choice').options[o].innerHTML + " ";
        }
      }
    }

    if(__$('choice1')){
      for(var o = 0; o < __$('choice1').options.length; o++){
        if(__$('choice1').options[o].selected == true){
          choices += __$('choice1').options[o].innerHTML + " ";
        }
      }
    }

    return choices;
  }

  function getUrineTest(){
    var urine_tests = '';
    if(__$('urine_tests')){
      for(var o = 0; o < __$('urine_tests').options.length; o++){
        if(__$('urine_tests').options[o].selected == true){
          urine_tests += __$('urine_tests').options[o].innerHTML + " ";
        }
      }
    }
    return urine_tests;
  }

  function initializeDate(){
    months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    year = "<%=  (session[:datetime] ? session[:datetime].to_date : Date.today).year rescue Date.today.year%>"
    month = "<%=  (session[:datetime] ? session[:datetime].to_date : Date.today).month rescue Date.today.month%>"
    day = "<%=  (session[:datetime] ? session[:datetime].to_date : Date.today).day rescue Date.today.day%>"

    setTimeout(__$("today").onmousedown, 0);
    setTimeout(function(){
      __$("touchscreenInput" + tstCurrentPage).value = "";
    }, 3);

    var year_plus = __$("dateselector_nextYear").onmousedown
    __$("dateselector_nextYear").onmousedown = function(){
      if(parseInt(year) <= parseInt(__$("dateselector_year").value)){
      }else{
        setTimeout(year_plus, 0);
      }
    }

    var month_plus = __$("dateselector_nextMonth").onmousedown
    __$("dateselector_nextMonth").onmousedown = function(){
      if((parseInt(year) <= parseInt(__$("dateselector_year").value)) && (parseInt(month) <= parseInt(months.indexOf(__$("dateselector_month").value) + 1))){
      }else{
        setTimeout(month_plus, 0);
      }
    }

    var day_plus = __$("dateselector_nextDay").onmousedown
    __$("dateselector_nextDay").onmousedown = function(){
      if((parseInt(day) <= parseInt(__$("dateselector_day").value)) && (parseInt(year) <= parseInt(__$("dateselector_year").value)) && (parseInt(month) <= parseInt(months.indexOf(__$("dateselector_month").value) + 1))){
      }else{
        setTimeout(day_plus, 0);

      }
    }
  }
  function alertStatus() {
<% if (status.present? rescue false) %>
      gotoNextPage();
<% end %>
  }

  function alertARTStatus(){
<% if (art_status.present? rescue false) %>
      gotoNextPage();
<% end %>
  }

  function alertARVNumber(){
<% if (arv_number.present? rescue false) %>
      gotoNextPage();
<% end %>
  }

  function remoteARTStatus(){
    displayText = "<div>"
<% if status.present? %>
      displayText += "HIV Status : &nbsp;&nbsp;&nbsp;&nbsp;<span class='value'><%= status.first %> </span><br />";
<% end %>

<% if art_status.present? %>
      displayText += "On ART : &nbsp;&nbsp;&nbsp;&nbsp;<span class='value'><%= art_status %> </span><br />";
<% end %>

<% if start_date.present? %>
      displayText += "ART Start Date : &nbsp;&nbsp;&nbsp;&nbsp;<span class='value'><%= start_date %></span> <br />";
<% end %>

<% if arv_number.present? %>
      displayText += "ARV Number : &nbsp;&nbsp;&nbsp;&nbsp;<span class='value'><%= arv_number %> </span> <br />";
<% end %>

    document.getElementById('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + displayText + '</div>';   
  }

  function advancedRapidRecencyAssay(){

    rapidRecencyAssayArray = JSON.parse('["Line 1. Control Line Present","Line 2. Positive Verification Line Present","Line 3. Long-Term Line Present"]');

    __$("inputFrame" + tstCurrentPage).remove()
    jQuery("#helpText" + tstCurrentPage).css({
      marginLeft: "0%",
      fontWeight: "bold",
      fontSize: "1.9em"
    })

    html = "<div id='divcontent'>";
    html += "<div id='divScroller'>";
    rapidRecencyAssayOptions = JSON.parse('["Line 1. Control Line Present","Line 2. Positive Verification Line Present","Line 3. Long-Term Line Present"]');
    html += "<table cellspacing='1' cellpadding='2' width='95%' id='yes_no_table'>";
    html += "<tbody>";

    for (var i=0; i<=rapidRecencyAssayOptions.length - 1; i++){
      html += "<tr>";
      html += "<td class='labelText'>" + rapidRecencyAssayOptions[i] + "</td>";

      
      html += "<td style='width: 30%;'>";
      html += "<table style='float: right; width: 100%; padding-right: 10px;' class='btn-table'>";
      html += "<tr>";
      
      html += "<td>";
      html += "<div class='switch switch-yes' id='yes_btn_container_" + i + "' category='rapid_recency_assay' ";
      html += "key='" + rapidRecencyAssayOptions[i] + "' onmousedown='clicked(this);'>";
      html += "<input class='hidden-checkbox' id='yes_checkbox_" + i + "' type='checkbox'>";
      html +="<label id='yes_lable_" + i + "'><i></i></label>";
      html += "</td>";
     
      html += "<td>";
      html += "<div class='switch switch-no' id='no_btn_container_" + i + "' category='rapid_recency_assay' ";
      html += "key='" + rapidRecencyAssayOptions[i] + "' onmousedown='clicked(this);'>";
      html += "<input class='hidden-checkbox' id='no_checkbox_" + i + "' type='checkbox'>";
      html +="<label id='no_lable_" + i + "'><i></i></label>";
      html += "</td>";
     
      html += "</tr>";
      html += "</table>";
      html += "</td>";
     
     
      html += "</tr>"
    }

    html += "<tbody>"
    html += "</table>";
    html += "</div>";
    html += "</div>";

    thisPage = document.getElementById('page' + tstCurrentPage);
    thisPage.innerHTML += html;

    preselectSelectedRapidRecencyAssay();
    setBackButton();
    __$('nextButton').onmousedown = function(){
      validateRapidRecencyAssayInput();
    }
    
  }

  function preselectSelectedRapidRecencyAssay(){
    for (var key in rapidRecencyAssayHash){
      yesValue = rapidRecencyAssayHash[key]["yes"];
      noValue = rapidRecencyAssayHash[key]["no"];
      yes_no_buttons = jQuery("[key='" + key + "']");
      yes_button = yes_no_buttons[0]
      no_button = yes_no_buttons[1]

      divs = document.getElementsByClassName('switch');
      for(var i = 0; i < divs.length; i++){
        divKey = divs[i].getAttribute('key');
        if(key == divKey){
          if(yesValue.length > 0) {
            index = yes_button.id.replace("yes_btn_container_",'');
            hidden_checkbox = document.getElementById('yes_checkbox_' + index);
            on_label_checkbox = document.getElementById('yes_lable_' + index);
            on_label_checkbox.setAttribute('style','color: white; background-color: lightgreen;');
            hidden_checkbox.checked = true;
            break;
          }else if(noValue.length > 0){
            index = no_button.id.replace("no_btn_container_",'');
            hidden_checkbox = document.getElementById('no_checkbox_' + index);
            on_label_checkbox = document.getElementById('no_lable_' + index);
            on_label_checkbox.setAttribute('style','color: white; background-color: lightgreen;');
            hidden_checkbox.checked = true;
            break;
          }
        }
      }
 
    }
  }

  function updateRapidRecencyNoValue(obj){
    key = obj.getAttribute('key');
    rapidRecencyAssayHash[key]["no"] = 'true';
    rapidRecencyAssayHash[key]["yes"] = '';
  }


  function updateRapidRecencyYesValue(obj){
    key = obj.getAttribute('key');
    rapidRecencyAssayHash[key]["yes"] = 'true';
    rapidRecencyAssayHash[key]["no"] = '';
  }

  function validateRapidRecencyAssayInput(){
    unselectedRapidRecencyAssay = [];
    for (var key in rapidRecencyAssayHash){
      yesValue = rapidRecencyAssayHash[key]["yes"];
      noValue = rapidRecencyAssayHash[key]["no"];
      if (yesValue.length == 0 && noValue.length == 0){
        //The row was not selected
        unselectedRapidRecencyAssay.push(key);
      }
    }

    if (unselectedRapidRecencyAssay.length > 0){
      showMessage("The following Asante Result Field are not selected <br />" +  unselectedRapidRecencyAssay.join('<br /> '));
    }else{
      gotoNextPage();
    }
  }

  function setBackButton(){
    backButton = __$('backButton')[0];
    if (backButton){
      mouseEvent = backButton.getAttribute('onmousedown');
      if (mouseEvent){
        if (!mouseEvent.match(/resetNextButton/i)){
          onmousedownevent = backButton.getAttribute('onmousedown') + '; resetNextButton()';
          backButton.setAttribute('onmousedown', onmousedownevent);
        }
      }
    }
  }

  function clicked(e) {
    category = e.getAttribute('category');
    key = e.getAttribute('key');
    
    if(e.id.match(/no_btn_container_/i)) {
      index = e.id.replace("no_btn_container_",'');
      hidden_checkbox = document.getElementById('no_checkbox_' + index);
      off_hidden_checkbox = document.getElementById('yes_checkbox_' + index);
      off_label_checkbox = document.getElementById('yes_lable_' + index);
      on_label_checkbox = document.getElementById('no_lable_' + index);
    }else{
      index = e.id.replace("yes_btn_container_",'');
      hidden_checkbox = document.getElementById('yes_checkbox_' + index);
      off_hidden_checkbox = document.getElementById('no_checkbox_' + index);
      off_label_checkbox = document.getElementById('no_lable_' + index);
      on_label_checkbox = document.getElementById('yes_lable_' + index);
    }

    off_hidden_checkbox.checked = false;
    off_label_checkbox.setAttribute('style','color: black; background-color: ""');
    on_label_checkbox.setAttribute('style','color: white; background-color: lightgreen;');
    if(hidden_checkbox.checked) {
      hidden_checkbox.checked = false;
    }else{
      hidden_checkbox.checked = true;
    }

    inputID = key + '_child_concept';
    if(e.id.match(/no_/i)) {
      //__$(key).value = '';
      __$(inputID).value = 'No';
      updateRapidRecencyNoValue(e);
    }else{
      //__$(key).value = key;
      __$(inputID).value = 'Yes';
      updateRapidRecencyYesValue(e)
    }
  }

  // function checkHIVTestPositive(){
  //   prev_hiv_test = __$('prev_hiv_test_results').value
    
  //   "< %= @available_test_results.unshift(["HIV", "HIV Test Result"]) %>" if (prev_hiv_test == 'Negative' && checkHIVTestDate())
  // }
        
  //-->
</script>

<%= form_tag :controller => "encounters", :action => "create" do |f| %>
  <%= hidden_field_tag "encounter[encounter_type_name]", "LAB RESULTS" %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
  <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>
  <%session_date = session[:datetime] || DateTime.now() %>

  <% rapid_recency_assay_array.each do |element| %>
    <!-- %= touch_hidden_tag "MALAWI ART SIDE EFFECTS", @patient, "#{element}", :id => "#{element}" %_-->
    <%= (touch_hidden_tag "#{element}", @patient, "", :id => "#{element}_child_concept").html_safe %>
  <% end %>

  <%= text_field_tag :showSummary, nil,
    {
    :tt_onLoad => "remoteARTStatus(); __$('keyboard').style.display = 'none'",
    :optional => "true",
    :tt_pageStyleClass => "NoControls NoKeyboard",
    :condition => "#{status.present? || art_status.present? || arv_number.present?}",
    :helpText => "<span class='helper'> ART Summary </span>"
  }
%>

  <!-- % if params[:update].blank? % -->

  <%= (touch_select_tag "Previous HIV Test done", @patient,
    options_for_select([["", ""],["Yes", "Yes"],["No", "No"]]),
    {
      :id => "previous_hiv_test",
      :helptext => "Previous HIV Test Done <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => "parsedConceptName = 'Previous HIV Test'; __$('backButton').style.display = 'none';"

    }).html_safe
%>

  <%= (touch_select_tag "Previous HIV Test Results", @patient,
    options_for_select([["", ""],["Negative", "Negative"],
        ["Positive", "Positive"],["Inconclusive", "Inconclusive"],
        ["Unknown", "Unknown"]] ),
    {
      :id => "prev_hiv_test_results",
      :helptext => "Previous HIV Test Results <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => "parsedConceptName = 'Previous HIV Test Results';",
      :condition => "__$('previous_hiv_test').value == 'Yes'"
    }).html_safe
%>

  <%= (touch_date_tag "Previous HIV Test date", @patient, nil,
    {
      :id => "prev_hiv_test_date",
      :helptext => "Previous HIV Test Date <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => " parsedConceptName = 'Previous HIV Test date';
      initializeDate();",
      :condition => "__$('prev_hiv_test_results').value != '' ||
      __$('previous_hiv_test').value == 'Yes'",
      :absoluteMax => "#{(session[:datetime].to_date - 1.days) rescue (Date.today - 1.days)}"
    }).html_safe
%>

  <!-- %= touch_select_tag "HIV status", @patient,
      options_for_select([["", ""],
                          ["Negative", "Negative"],
                          ["Positive", "Positive"],
                          ["Inconclusive", "Inconclusive"],
                          ["Unknown", "Unknown"],
                          ["Not Done", "Not Done"]],
                         status),
                       {
                           :id => "new_test_result_at_current_facility",
                           :helptext => "HIV Test Result <span class='helper'> Lab Results</span>",
                           :tt_BeforeUnload => "checkHIVTestUnknown()",
                           :tt_onUnLoad => "parsedConceptName = '';",
                           :tt_onLoad => "parsedConceptName = 'HIV Status'; alertStatus(); unknownToNotDone(); ",
                           :condition => "#{["unknown", "old_negative"].include?(@patient.resent_hiv_status?(session_date))}"
                       }
  %>

  < %= touch_date_tag "HIV test date", @patient, nil,
                     {
                         :id => "enter_date_result_given",
                         :helptext => "HIV Test Date <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'HIV Test date';initializeDate();",
                         :condition => "__$('new_test_result_at_current_facility').value != 'Not Done' &&
                                  #{["unknown", "old_negative"].include?(@patient.resent_hiv_status?(session_date))}",
                         :tt_BeforeUnload => "checkHIVTestDate()",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     }
  % -->

    <%= (touch_select_tag "On ART", @patient,
    options_for_select([["", ""],["Yes", "Yes"],
        ["No", "No"]], art_status),
    {
      :id => "on_art",
      :helptext => "Is Patient On ART? <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => " parsedConceptName = 'On ART'; alertARTStatus()",
      :condition => "__$('new_test_result_at_current_facility').value == 'Positive'
      || __$('prev_hiv_test_results').value == 'Positive'"
    }
  ).html_safe%>

  <%= (touch_text_field_tag "ARV Number", @patient, arv_number,
    {
      :id => "arv_number",
      :optional => true,
      :tt_onLoad => 'alertARVNumber()',
      :helptext => "ARV Number <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "__$('on_art').value == 'Yes'"
    }).html_safe
%>

  <%= select_tag("choice",
    options_for_select([["", ""],["", ""],
        ["HB", "HB Test Result"],["Syphilis", "Syphilis Test Result"],
        ["Urine", "Urine Test Results"],["Malaria", "Malaria Test Result"],
        ["Blood Group", "Blood Group Test Result"]], ["", ""]),
    {
      :helpText => "New Test Results Available Today <span class='helper'> Lab Results</span>",
      :id => "choice",
      :multiple => true,
      :optional => :true,
      :condition => "__$('previous_hiv_test').value == 'Yes' && (__$('prev_hiv_test_results').value == 'Positive' || !checkHIVTestDate());",
      :tt_onLoad => "__$('test_date').value = '';"
    })
%>

  <%= select_tag("choice",
    options_for_select([["", ""],["", ""],
        ["HIV", "HIV Test Result"],["HB", "HB Test Result"],
        ["Syphilis", "Syphilis Test Result"],["Urine", "Urine Test Results"],
        ["Malaria", "Malaria Test Result"],
        ["Blood Group", "Blood Group Test Result"]], ["", ""]),
    {
      :helpText => "New Test Results Available Today <span class='helper'> Lab Results</span>",
      :id => "choice1",
      :multiple => true,
      :optional => :true,
      :condition => "__$('previous_hiv_test').value == 'No' || (__$('prev_hiv_test_results').value == 'Negative' && checkHIVTestDate());"
    })
%>

  <!-- % else % -->

  <!-- %= select_tag("choice",
    options_for_select([["", ""],
                                     ["", ""],
                                     ["HB", "HB Test Result"],
                                     ["Syphilis", "Syphilis Test Result"],
                                     ["Urine", "Urine Test Results"],
                                     ["Malaria", "Malaria Test Result"],
                                     ["Blood Group", "Blood Group Test Result"]], ["", ""]),
                 {
                     :helpText => "New Test Results Available Today <span class='helper'> Lab Results</span>",
                     :id => "choice",
                     :multiple => true,
                     :optional => :true
                 })
  % -->

  <!-- %= select_tag("choice",
      options_for_select([["", ""],["", ""],
        ["HIV", "HIV Test Result"],["HB", "HB Test Result"],
        ["Syphilis", "Syphilis Test Result"],["Urine", "Urine Test Results"],
        ["Malaria", "Malaria Test Result"],
        ["Blood Group", "Blood Group Test Result"]], ["", ""]),
      {
        :helpText => "New Test Results Available Today <span class='helper'> Lab Results</span>",
        :id => "choice",
        :multiple => true,
        :optional => :true,
        :condition => "__$('prev_hiv_test') == 'Negative' && checkHIVTestDate()"
      })
  % -->

  <!-- %end% -->

  <%= (touch_select_tag "HIV status", @patient,
    options_for_select([["", ""],["Negative", "Negative"],
        ["Positive", "Positive"],["Inconclusive", "Inconclusive"],
        ["Not Done", "Not Done"]]),
    {
      :id => "new_test_result_at_current_facility",
      :helptext => "HIV Test Result <span class='helper'> Lab Results</span>",
      :tt_BeforeUnload => "checkHIVTestUnknown();",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => "parsedConceptName = 'HIV Status'; ",
      :condition => "getSelected().match(/HIV/)"
    }).html_safe
%>

  <%= (touch_select_tag "On ART", @patient,
    options_for_select([["", ""],["Yes", "Yes"],
        ["No", "No"]], art_status),
    {
      :id => "new_on_art",
      :helptext => "Is Patient On ART? <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => " parsedConceptName = 'On ART'; alertARTStatus();",
      :condition => "__$('new_test_result_at_current_facility').value == 'Positive'"
    }).html_safe
%>

  <%= (touch_text_field_tag "ARV Number", @patient, arv_number,
    {
      :id => "arv_number",
      :optional => true,
      :tt_onLoad => 'alertARVNumber()',
      :helptext => "ARV Number <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "__$('new_on_art').value == 'Yes'"
    }).html_safe
%>

  <!-- HIV Test date -->
  <%= (touch_hidden_tag "HIV test date", @patient, "#{session[:datetime].to_date rescue Date.today}",
    {
      :id => "test_date"
    }).html_safe
%>

  <!-- %= touch_date_tag "HIV test date", @patient, "",
    {
      :id => "enter_date_result_given",
      :helptext => "Date HIV Test Done <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => " parsedConceptName = 'HIV Test date';initializeDate();",
      :condition => "__$('new_test_result_at_current_facility').value != 'Not Done'
                    && getSelected().match(/HIV/) !== null"
    }
  % -->


    <%= (touch_text_field_tag "HB Test Result", @patient, nil,
    {
      :id => "hb_result",
      :helptext => "HB Test Result (g/dl) <span class='helper'> Lab Results</span>",
      :field_type => "number",
      :tt_pageStyleClass => "NumbersWithUnknownAndDecimal",
      :min => 2,
      :max => 16,
      :tt_onLoad => "unknownToNotDone(); parsedConceptName = 'HB Test Result';",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "getSelected().match(/HB/)",
      :validationRule => "^([0-9]+)$|Not Done$",
      :validationMessage => "Enter valid test results."
    }).html_safe
%>
  <% if (Settings["recency_test"] == true) %>
    <%= text_field_tag "advanced_rapid_recency_assay", nil, {
      :id => 'rapid_recency_assay',
      :tt_onLoad => "advancedRapidRecencyAssay(); __$('keyboard').style.display = 'none';",
      :helpText => "Rapid Recency Assay - Asante Results",
      :optional => "true",
      :tt_pageStyleClass => "NoControls",
      :condition => "__$('new_test_result_at_current_facility').value == 'Positive'
      || __$('prev_hiv_test_results').value == 'Positive';" } %>
  <%end%>

  <!-- %= touch_date_tag "HB Test Result Date", @patient, nil,
                     {
                         :id => "enter_date_hb1_result_given",
                         :helptext => "Date HB Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onLoad => "initializeDate(); parsedConceptName = 'HB Test Result Date'; ",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :condition => "!__$('hb_result').value.match(/Not\\sDone/) &&
                              getSelected().match(/HB/)",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     }
  % -->

    <%= (touch_select_tag "Syphilis Test Result", @patient,
    options_for_select([["", ""],
        ["Positive", "Positive"],
        ["Negative", "Negative"],
        ["Not Done", "Not Done"]]),
    {
      :id => "syphilis_result",
      :helptext => "Syphilis Test Result <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_onLoad => "parsedConceptName = 'Syphilis Test Result';",
      :condition => "getSelected().match(/Syphilis/)"
    }).html_safe
%>

  <!-- %= touch_date_tag "Syphilis Test Result Date", @patient, nil,
                     {
                         :id => "enter_date_syphilis_result_given",
                         :helptext => "Date Syphilis Test Result Done <span class='helper'> Lab Results</span>",
                         :max => "#{session[:datetime].to_date rescue Date.today}",
                         :tt_onLoad => " parsedConceptName = 'Syphilis Test Result Date';initializeDate();",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :condition => "__$('syphilis_result').value != 'Not Done' &&
                            getSelected().match(/Syphilis/)"
                     }
  % -->

    <%= (touch_select_tag "Malaria Test Result", @patient,
    options_for_select([["", ""],
        ["Negative", "Negative"],
        ["Positive", "Positive"],
        ["Not Done", "Not Done"]]),
    {
      :id => "malaria_test_result",
      :helptext => "Malaria Test Result <span class='helper'> Lab Results</span>",
      :tt_onUnLoad => "parsedConceptName = 'Malaria Test result';",
      :tt_onLoad => "parsedConceptName = ' Status'",
      :condition => "getSelected().match(/Malaria/)"
    }).html_safe
%>

  <!-- %= touch_date_tag "Date of laboratory test", @patient, nil,
                     {
                         :id => "enter_date_malaria_result_done",
                         :helptext => "Date Malaria Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Malaria Test date';",
                         :max => "#{session[:datetime].to_date rescue Date.today}",
                         :condition => "__$('malaria_test_result').value.toLowerCase().trim().match(/tive/i)"
                     }
  % -->

    <%= (touch_select_tag "BLOOD GROUP", @patient,
    options_for_select([["", ""], ["A+", "A+"], ["A-","A-"],
        ["B+", "B+"], ["B-","B-"],
        ["O+","O+"], ["O-", "O-"],
        ["AB+","AB+"],["AB-", "AB-"]]),
    {:id => "blood_group",
      :helptext => "Blood Group Test Result <span class='helper'> Lab Results</span>",
      :tt_onLoad => "parsedConceptName = 'Blood Group Test Result';",
      :tt_onUnLoad => "parsedConceptName = ''",
      :condition => "getSelected().match(/Blood\sGroup/)"
    }).html_safe %>
  <!-- %= touch_date_tag "Blood Group Test Date", @patient, nil,
                     {:id => "date_blood_group_test_done",
                      :helptext => "Date Blood Group Test Result Done <span class='helper'> Lab Results</span>",
                      :tt_onUnLoad => "parsedConceptName = '';",
                      :tt_onLoad => " parsedConceptName = 'Blood Group Test Dtae';",
                      :max => "#{session[:datetime].to_date rescue Date.today}",
                      :condition => "__$('blood_group').value !== ''"
                     } % -->

  <%= select_tag("urine_tests",
    options_for_select([["", ""],
        ["", ""],
        ["Urine Protein", "Urine Protein"],
        ["Glucose", "Glucose"],
        #["Urine Bacteria Test", "Urine Bacteria Test"],
        #["Urine Blood", "Urine Blood"],
        ["WBC", "WBC"],["RBC", "RBC"],
        # ["Urobilinogen", "Urobilinogen"],
        # ["Bilirubin", "Bilirubin"],
        ["Nitrate", "Nitrate"]
        #["Ketones", "Ketones"],
        #,["Leucocytes", "Leucocytes"]
        #,["Specific Gravity", "Specific Gravity"]
      ], ["", ""]),
    {
      :condition => "getSelected().match(/Urine/);",
      :helpText => "Available Urine Test Results <span class='helper'> Lab Results</span>",
      :id => "urine_tests", :multiple => true,
      :optional => :true
    })%>

  <%= (touch_select_tag "URINE PROTEIN", @patient,
    options_for_select([["", ""],
        ["Negative", "Negative"],
        ["(+)", "(+)"],
        ["+", "+"],
        ["++", "++"],
        ["+++", "+++"],
        ["++++", "++++"]]),
    {
      :id => "enter_urine_protein",
      :helptext => "Urine Protein Test Result <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Urine Protein Test';",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "getUrineTest().match(/Urine\sProtein/);"
    }).html_safe %>
  <%= (touch_select_tag "Glucose", @patient,
    options_for_select([["", ""], ['Normal','Normal'],
        ['+','+'],['++','++'],
        ['+++','+++'],['++++','++++']]),
    {
      :id => "glucose_negative_test",
      :helptext => "Glucose Test Result (mg/dl) <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Glucose';",
      :tt_onUnLoad => "parsedConceptName = '';if(__$('glucose_negative_test').value == 'Other'){
      __$('touchscreenInput' + tstCurrentPage).value = '';
      __$('glucose_negative_test').value = '';
      glucoseTest = true;
      }else{
      glucoseTest = false;
      };",
      :condition => "getUrineTest().match(/Glucose/);"
    }).html_safe %>

  <!-- %= touch_date_tag "Urine Protein Test Date", @patient, nil,
                     {
                         :id => "urine_protein_test_date",
                         :helptext => "Date Urine Protein Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Urine Protein Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Urine/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_select_tag "Urine Blood", @patient,
    options_for_select([["", ""],
        ['Negative','Negative'],
        ['Heamolysis +10','Heamolysis +10'],
        ['Heamolysis ++50','Heamolysis ++50'],
        ['Heamolysis +++250','Heamolysis +++250'],
        ['Non-Heamolysis +10','Non-Heamolysis +10'],
        ['Non-Heamolysis ++50','Non-Heamolysis ++50']]),
    {
      :id => "enter_urine_blood",
      :helptext => "Urine Blood Test Result <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Urine Blood';",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "getUrineTest().match(/Urine\sBlood/);"
    }).html_safe %>

  <!-- %= touch_date_tag "Urine Blood Test Date", @patient, nil,
                     {
                         :id => "urine_blood_test_date",
                         :helptext => "Date Urine Blood Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Urine Blood Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Urine\sBlood/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_text_field_tag "WBC", @patient, nil,
    {:id => "white_blood_cells",
      :field_type => 'number',
      :helptext =>"White Blood Cells Test Result (cmm) <span class='helper'> Lab Results</span>",
      :allowFreeText => 'true',
      :tt_onLoad => "parsedConceptName = 'WBC';",
      :min => 0,
      :max => 1000000,
      :condition => "getUrineTest().match(/WBC/);",
      :tt_onUnLoad => "parsedConceptName = '';",
      :units => 'cmm',
      :validationRule => "(^([0-9]*[.])?[0-9]+$)",
      :validationMessage => "You must enter a valid number",
      :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"}).html_safe %>

  <!-- %= touch_date_tag "WBC Test Date", @patient, nil,
                     {
                         :id => "urine_wbc_test_date",
                         :helptext => "Date White Blood Cells Test Date <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'White Blood Cells Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/WBC/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_text_field_tag "RBC", @patient, nil,
    {
      :id => "red_blood_cells",
      :field_type => 'number',
      :helptext =>"Red Blood Cells Test Result (cmm) <span class='helper'> Lab Results</span>",
      :allowFreeText => 'true',
      :tt_onLoad => "parsedConceptName = 'RBC';",
      :min => 0,
      :max => 1000000,
      :condition => "getUrineTest().match(/RBC/);",
      :tt_onUnLoad => "parsedConceptName = '';",
      :units => 'cmm',
      :validationRule => "(^([0-9]*[.])?[0-9]+$)",
      :validationMessage => "You must enter a valid number",
      :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"
    }).html_safe %>

  <!-- %= touch_date_tag "RBC Test Date", @patient, nil,
                     {
                         :id => "urine_rbc_test_date",
                         :helptext => "Date Red Blood Cells Test Date <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Red Blood Cells Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/RBC/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_text_field_tag "Urobilinogen", @patient, nil,
    {:id => "Urobilinogen",
      :field_type => 'number',
      :helptext =>"Urobilinogen Test Result (mg/dl) <span class='helper'> Lab Results</span>",
      :allowFreeText => 'true',
      :tt_onLoad => "parsedConceptName = 'Urobilinogen';",
      :min => 0,
      :max => 1000000,
      :condition => "getUrineTest().match(/Urobilinogen/);",
      :tt_onUnLoad => "parsedConceptName = '';",
      :units => 'mg/dl',
      :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"}).html_safe %>

  <!-- %= touch_date_tag "Urobilinogen Test Date", @patient, nil,
                     {
                         :id => "urobilinogen test Date",
                         :helptext => "Date Urobilinogen Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Urobilinogen Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Urobilinogen/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_select_tag "Bilirubin", @patient,
    options_for_select([["", ""],
        ['Negative','Negative'],
        ['+','+'], ['++','++'],
        ['+++','+++']]),
    {
      :id => "bilirubin",
      :helptext => "Bilirubin Test Result <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Bilirubin';",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "getUrineTest().match(/Bilirubin/);"
    }).html_safe %>

  <!-- %= touch_date_tag "Bilirubin Test Date", @patient, nil,
                     {
                         :id => "bilirubin_test_date",
                         :helptext => "Date Bilirubin Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Bilirubin Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Bilirubin/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_select_tag "Urine Nitrate Test", @patient,
    options_for_select([["", ""],
        ['Negative','Negative'],
        ['Trace','Trace'],
        ['Positive','Positive']]),
    {
      :id => "nitrate",
      :helptext => "Nitrate Test Result <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Urine Nitrate Test';",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "getUrineTest().match(/Nitrate/);"
    }).html_safe %>

  <!-- %= touch_date_tag "Urine Nitrate Test Date", @patient, nil,
                     {
                         :id => "nitrate_test_date",
                         :helptext => "Date Urine Nitrate Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Urine Nitrate Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Nitrate/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_select_tag "Urine Ketones", @patient,
    options_for_select([["", ""],
        ['Negative','Negative'],
        ['Trace','Trace'],
        ['Positive','Positive']]),
    {
      :id => "ketones",
      :helptext => "Urine Ketones Test Result <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Urine Ketones';",
      :tt_onUnLoad => "parsedConceptName = '';",
      :condition => "getUrineTest().match(/Ketones/);"
    }).html_safe %>

  <!-- %= touch_date_tag "Urine Ketones Test Date", @patient, nil,
                     {
                         :id => "ketone_test_date",
                         :helptext => "Date Urine Kitone Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Urine Ketones Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Ketones/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <!-- %= touch_text_field_tag "Glucose", @patient, nil,
                           {:id => "glucose_negative_test",
                            :field_type => 'number',
                            :helptext =>"Glucose Test Result (mg/dl) <span class='helper'> Lab Results</span>",
                            :allowFreeText => 'true',
                            :tt_onLoad => "parsedConceptName = 'Glucose negative';",
                            :min => 1,
                            :max => 1000000,
                            :condition => "getUrineTest().match(/Glucose/) && glucoseTest == true;",
                            :tt_onUnLoad => "parsedConceptName = '';",
                            :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"} % -->

  <!-- %= touch_date_tag "Glucose Test Date", @patient, nil,
                     {
                         :id => "glucose_test_date",
                         :helptext => "Date Glucose Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Glucose Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Glucose/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_select_tag "Leucocytes Test", @patient,
    options_for_select([["", ""],
        ['Negative','Negative'],
        ['Other','Other']]),
    {
      :id => "leucocytes_test_results",
      :helptext => "Leucocytes Test Result (WBC/ul) <span class='helper'> Lab Results</span>",
      :tt_onLoad => " parsedConceptName = 'Leucocytes Test'; ",
      :tt_onUnLoad => "parsedConceptName = '';if(__$('leucocytes_test_results').value == 'Other'){
      __$('touchscreenInput' + tstCurrentPage).value = '';
      __$('leucocytes_test_results').value = '';
      leucocytesTest = true;
      }else{
      leucocytesTest = false;
      };",
      :condition => "getUrineTest().match(/Leucocytes/);"
    }).html_safe %>

  <%= (touch_text_field_tag "Leucocytes Test", @patient, nil,
    {:id => "leucocytes_test_results",
      :field_type => 'number',
      :helptext =>"Leucocytes Test Result (WBC/ul) <span class='helper'> Lab Results</span>",
      :allowFreeText => 'true',
      :tt_onLoad => "parsedConceptName = 'Leucocytes Test';",
      :min => 0,
      :max => 1000000,
      :condition => "getUrineTest().match(/Leucocytes/) && leucocytesTest == true;",
      :tt_onUnLoad => "parsedConceptName = '';",
      :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"}).html_safe %>

  <!-- %= touch_date_tag "Leucocytes Test Date", @patient, nil,
                     {
                         :id => "urine_protein_test_date",
                         :helptext => "Date Leucocytes Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Leucocytes Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Leucocytes/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->

  <%= (touch_text_field_tag "Specific Gravity", @patient, nil,
    {:id => "specific_gravity",
      :field_type => 'number',
      :helptext =>"Specific Gravity Test Result <span class='helper'> Lab Results</span>",
      :allowFreeText => 'true',
      :tt_onLoad => "parsedConceptName = 'Specific Gravity';",
      :min => 0,
      :max => 1000000,
      :condition => "getUrineTest().match(/Specific\sGravity/);",
      :tt_onUnLoad => "parsedConceptName = '';",
      :validationRule => "([0-9]+(\\.[0-9]))|Unknown$",
      :validationMessage => "You must enter a valid decimal number",
      :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"}).html_safe %>

  <!-- %= touch_date_tag "Specific Gravity Test Date", @patient, nil,
                     {
                         :id => "specific_gravity_test_date",
                         :helptext => "Date Specific Gravity Test Result Done <span class='helper'> Lab Results</span>",
                         :tt_onUnLoad => "parsedConceptName = '';",
                         :tt_onLoad => " parsedConceptName = 'Specific Gravity Test Date';initializeDate();",
                         :condition => "getUrineTest().match(/Specific\sGravity/);",
                         :max => "#{session[:datetime].to_date rescue Date.today}"
                     } % -->


  <%#= touch_select_tag "WHO Stage", @patient, options_for_select([["", ""], ["1", "1"],
  ["2", "2"], ["3", "3"], ["4", "4"], ["Unknown", "Unknown"]]),
  {:id => "who_stage",
  :helptext => "WHO STAGE",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive'#{ (params[:update] ?
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%#= touch_select_tag "Is on CPT", @patient, options_for_select([["", ""], ["Yes", "Yes"], ["No", "No"]]),
  {:id => "on_cpt?",
  :helptext => "On CPT?",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive'#{ (params[:update] ?
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%#= touch_select_tag "ON ART", @patient, options_for_select([["", ""], ["Yes", "Yes"], ["No", "No"]]),
  {:id => "on_art",
  :helptext => "On Art?",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive'#{ (params[:update] ?
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%#= touch_select_tag "ART start date", @patient, options_for_select([
  ["", ""], ["Before this Pregnancy", "Before this Pregnancy"],
  ["At 0-27 weeks of Pregnancy", "At 0-27 weeks of Pregnancy"],
  ["At 28+ of Pregnancy", "At 28+ of Pregnancy"]]),
  {:id => "art_start",
  :helptext => "When did Client start ART?",
  :condition => "__$('new_test_result_at_current_facility').value == 'Positive' && __$('on_art').value == 'Yes'#{ (params[:update] ?
  " && getSelected().match(/HIV\sTest\sResult/)" : "") }" } %>

  <%= submit_tag 'Finish' %>
<% end %>
