<style>
  .tt_controls_month_of_birth #keyboard{
    display: none;
  }
  #tt_page_month_of_birth .options{
    height:17em;
  }
  .tt_controls_occupation #keyboard{
    display: none;
  }
  #tt_page_occupation .options{
    height:17em;
  }

  li.highlighted {
    background-color: lightblue;
  }
  li {
    /*padding: 5px;*/
    cursor: pointer;
    font-size: 1.5em;
    margin: 2px;
    -moz-user-select: none;
  }
</style>
<script>
  var tt_cancel_destination = '/patients/demographics?patient_id=<%= @patient.id%>&person_id=<%=
@person.id %>&cat=<%= params['cat'] %>'
  var skipped = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  var value = "";
  var values_hash = {};
  selectAll = false;
  
  function seen(page) {
    for (var i = page; i >= 0; i--) {
      skipped[i] = 1;
    }
  }

  function showNext(){
    __$("nextButton").style.display = "block";
  }

  function hideNext(){
    __$("nextButton").style.display = "none";
  }

  function set_ajaxURL_for_suggestions(url, filter_value) {
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', url + filter_value + "&search_string=");
    listSuggestions(tstCurrentPage);
  }

  function ajaxify(cat, selected){

    if (cat == "region"){
      var url = "/people/districts_for?filter_value=" + selected + "&search_string=";
      ajaxCustomRequest(cat, url);
    }else if (cat == "district"){
      var url = "/people/traditional_authority_for?filter_value=" + tstInputTarget.value + "&search_string=";
      ajaxCustomRequest(cat, url);
    }
  }

  function ajaxCustomRequest(cat, aUrl) {

    var httpRequest = new XMLHttpRequest();
    httpRequest.onreadystatechange = function() {
      handleCustomResult(cat, httpRequest);
    };
    try {
      httpRequest.open('GET', aUrl, true);
      httpRequest.send(null);
    } catch(e){
    }
  }

  function handleCustomResult(cat, aXMLHttpRequest) {
    if (!aXMLHttpRequest) return;

    if (aXMLHttpRequest.readyState == 4 && (aXMLHttpRequest.status == 200 ||
      aXMLHttpRequest.status == 304)) {

      var result = aXMLHttpRequest.responseText;
      values_hash["region"] = tstInputTarget.value;
      values_hash["district"] = '';

      if (cat == "region"){

        __$("sc2").innerHTML = ""

        var data = result.split("|");

        var ul = document.createElement("ul");

        for(var i = 0; i < data.length; i ++){

          var li = document.createElement("li")
          li.setAttribute("class", "district");
          li.value = data[i]
          li.innerHTML = data[i]
          li.onmousedown = function(){
            updateCustomTouchscreenInput(this);
          }

          ul.appendChild(li);
        }

        __$("sc2").appendChild(ul);
      }else if(cat == "district"){

        var data = result.split("|");

        var ul = document.createElement("ul");

        for(var i = 0; i < data.length; i ++){

          var li = document.createElement("li")
          li.setAttribute("class", "ta");
          li.value = data[i];
          li.innerHTML = data[i];
          li.onmousedown = function(){
            updateCustomTouchscreenInput(this);
          }

          ul.appendChild(li);
        }

      }
    }
  }

  function verifyFields(num){

    if (values_hash['district'] == ''){
      values_hash["temp_region"] = values_hash["region"];
      values_hash["region"] = "";
      region_terminal = false;
    }else{
      values_hash["temp_region"] = "";
      region_terminal = true;
    }

    if (num == 1){

      __$("address2").value = values_hash["district"];
      __$("region_region_name").value = values_hash["region"];
    }else if (num == 2){

      __$("state_province").value = values_hash["district"];
      __$("filter_region").value = values_hash["region"];
    }
    tstInputTarget.value = values_hash["region"];
    values_hash["region"] = values_hash["temp_region"];

  }

  function updateCustomTouchscreenInput(element){

    values_hash["district"] = element.innerHTML;
    var inputTarget = tstInputTarget;

    if (element.value.length>1)
      inputTarget.value = element.value;
    else if (element.innerHTML.length>1)
      inputTarget.value = element.innerHTML;

    highlightSelection(element.parentNode.childNodes, inputTarget)
    tt_update(inputTarget);

  }


   function updateInputFields(){
    if (value.trim() != tstInputTarget.value.trim()){
    
      value = tstInputTarget.value;
      if (value.length > 0 && value.match(/region|foreign/i)) {
		ajaxify("region", value);
      }
    }

    if (region_terminal == false){
      setTimeout("updateInputFields()", 100);
    }
  }

  function ajaxifyDistricts(){
    value = tstInputTarget.value
    region_terminal = false;
    setTimeout("updateInputFields()", 100)

    __$("viewport").style.width = "48%";
    __$("viewport").style.borderStyle = "solid";
    __$("viewport").style.borderWidth = "2px";
    __$("viewport").style.borderTop = "hidden";
    __$("viewport").style.borderLeft = "hidden";
    __$("viewport").style.borderBottom = "hidden";

    var view2 = document.createElement("div");
    view2.id = "viewport2"
    view2.setAttribute("class", "options");
    view2.style.position = "absolute";
    view2.style.top = "15.35%";
    view2.style.left = "50%";
    view2.style.width = "48%";
    view2.style.borderStyle = "solid";
    view2.style.borderWidth = "2px";
    view2.style.borderTop = "hidden";
    view2.style.borderLeft = "hidden";
    view2.style.borderBottom = "hidden";
    view2.style.borderRight = "hidden";

    var sc2 = document.createElement("div");
    sc2.setAttribute("class", "scrollable");
    sc2.setAttribute("referstotouchscreeninputid", tstCurrentPage + 1);
    sc2.id = "sc2";
    view2.appendChild(sc2);
    __$("inputFrame" + tstCurrentPage).appendChild(view2);
  }


  function showSummary(field){
    var div = document.createElement("div");
    div.id = "status";
    div.className = "statusLabel";

    if(field == "year"){

      div.style.marginTop = "-4%";
      div.style.textAlign = "center";
      div.innerHTML = "<i>Year   =   1999</i>"
      __$("inputFrame" + tstCurrentPage).appendChild(div);

    }else if (field == "day"){

      var months = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Unknown"];
      div.style.textAlign = "center";
      div.innerHTML = "<i>Year   =  " + __$("person_birth_year").value + "; Month = " + months[__$("person_birth_month").value] + "</i>";
      __$("inputFrame" + tstCurrentPage).appendChild(div);
    }
  }

</script>

<% form_for :person, @person, :url => { :action => "update_demographics" } do |f| %>
  <%
  case @field
  when 'first_name'
  %>

    <%= text_field_tag "person[names][given_name]", params[:given_name],
      {:id => 'given_name',
      :field_type => 'alpha',
      :helpText => "First name<span class='helper'> Outcome</span>",
      :ajaxURL => '/person_names/given_names?search_string=',
      :allowFreeText => true,
      :tt_onLoad => 'seen(tstCurrentPage);' } %>

  <%when 'last_name'%>
    <%= text_field_tag "person[names][family_name]", params[:family_name],
      {:id => 'family_name',
      :field_type => 'alpha',
      :helpText => "Last name<span class='helper'> Demographics (Edit)</span>",
      :ajaxURL => '/person_names/family_names?search_string=',
      :allowFreeText => true,
      :tt_onLoad => 'seen(tstCurrentPage);' } %>

  <%when 'maiden_name'%>
    <%= text_field_tag "person[names][family_name2]", params[:family_name2],
      {:id => 'family_name2',
      :field_type => 'alpha',
      :helpText => "Maiden name<span class='helper'> Demographics (Edit)</span>",
      :ajaxURL => '/person_names/family_names?search_string=',
      :allowFreeText => true,
      :condition => '$("family_name2").value == "" || skipped[tstCurrentPage] == 1',
      :tt_onLoad => 'seen(tstCurrentPage);' } %>

  <%when 'gender'%>
    Gender: <%= select_tag "gender", options_for_select([["",""], ["Male", "M"], ["Female", "F"]], params[:gender]),
      {
      :id => 'gender',
      :helpText => "Gender<span class='helper'> Demographics (Edit)</span>",
      :tt_onLoad => 'seen(tstCurrentPage);' } %>

  <%when 'birthdate'%>
    <%= text_field_tag "person[birth_year]", nil,
      {:helpText => "Year of Birth<span class='helper'> Demographics (Edit)</span>",
      :field_type => 'number',
      :absoluteMin => "1890",
      :min => "1940",
      :absoluteMax => (session[:datetime].to_date rescue Date.today),
      :tt_pageStyleClass => "Numeric NumbersOnly",
      :tt_onLoad => 'seen(tstCurrentPage);' }  %>

    <%= select_tag "person[birth_month]", options_for_select(@month_names),
      {   :helpText => "Month of Birth<span class='helper'> Demographics (Edit)</span>",
          :tt_onLoad => "selectAll = false;",
          :tt_pageStyleClass => "NoKeyboard"
      }%>

    <%= text_field_tag "person[birth_day]",  nil,
      :field_type => 'number',
      :helpText => "Birth Day<span class='helper'> Demographics (Edit)</span>", :absoluteMin => 1,
      :absoluteMax => 31,
      :tt_pageStyleClass => "Numeric NumbersOnly"
    %>

  <%when 'city_village'%>

  <%when 'home_village'%>

  <%when 'landmark'%>
    <%= select_tag "person[addresses][address1]",  params[:address1],
      {	:id => 'address1',
      :helpText => "Closest Landmark or Plot Number<span class='helper'> Demographics (Edit)</span>",
      :allowFreeText => true,
      :ajaxURL => '/people/landmark?filter_value=',
      :tt_pageStyleClass => "NoKeyboard",
      :tt_onLoad => "showNext()"
      #:tt_onLoad => "set_ajaxURL_for_suggestions('/people/landmark?filter_value=' ,document.getElementById('person_addresses_city_village').value);$('nextButton').style.display = 'block';"
    }%>  <%when 'current_district' %>

    <p><label for="filter_region">Current Address<span class='helper'> Demographics (Edit)</span></label></br>
      <%= text_field "filter" , 'region', :xhelpText => "Region<span class='helper'> Demographics (Edit)</span>",
        :ajaxURL => '/people/region/Region?field=role&foreign=true&value=',
        :tt_pageStyleClass => "NoKeyboard",
        :tt_BeforeUnLoad => "verifyFields(2)",
        :tt_onUnLoad => "if ($('filter_region').value == 'Foreign'){ $('person_addresses_city_village').value = $('state_province').value}",
        :tt_onLoad => "showNext(); ajaxifyDistricts();" %></p>

    <%= text_field_tag "person[addresses][state_province]", params[:state_province], {
      :id => 'state_province',
      :condition => "false"
    } %>

    <p><label for="filter_t_a">Traditional Authority (T/A) or area of residence<span class='helper'> Demographics (Edit)</span></label></br>

      <%= text_field "filter" , 't_a', :condition => '$("state_province").value != "Other" && $("filter_region").value != "Foreign"', :helpText => "Traditional Authority (T/A) or area of residence<span class='helper'> Demographics (Edit)</span>", :tt_requireNextClick => false, :ajaxURL => '', :tt_pageStyleClass => "azButton", :tt_onLoad => "set_ajaxURL_for_suggestions('/people/traditional_authority/TraditionalAuthority?filter_value=' ,document.getElementById('state_province').value);$('nextButton').style.display = 'none';" %></p>

    <%= text_field "filter" , 't_a_a', :tt_onUnLoad => 'if ($("t_a_a")) {$("t_a").value = $("t_a_a").value}',
                   :condition => '$("state_province").value == "Other" && $("filter_region").value != "Foreign"', :ajaxURL => '/person_addresses/traditional_authority?search_string=', :tt_pageStyleClass => "azButton", :allowFreeText => true,  :helpText => "Specify Traditional Authority (T/A) or area of residence<span class='helper'> Demographics (Edit)</span>", :tt_onLoad => "$('nextButton').style.display = 'block';" %></p>

    <%= text_field_tag "person[addresses][city_village]", params[:city_village],
      {:condition => '$("filter_t_a").value != "Other"  && $("filter_region").value != "Foreign"',
      :field_type => 'alpha',
      :helpText => "Location/Village<span class='helper'> Demographics (Edit)</span>",
      :tt_requireNextClick => false,
      :tt_pageStyleClass => "azButton",
      :ajaxURL => '/people/village?search_string=',
      :allowFreeText => false , :tt_onLoad => "set_ajaxURL_for_suggestions('/people/village/Village?filter_value=' ,document.getElementById('filter_t_a').value);$('nextButton').style.display = 'none';"}%>

    <%= text_field_tag "p[addresses][city_village_a]", params[:city_village_a],
      {:tt_onUnLoad => '$("person_addresses_city_village").value = $("p_addresses_city_village_a").value',
      :condition => '$("filter_t_a").value == "Other"' ,
      :ajaxURL => '/person_addresses/village?search_string=',
      :allowFreeText => true, :field_type => 'alpha',
      :helpText => "Specify Location/Village<span class='helper'> Demographics (Edit)</span>",
      :tt_pageStyleClass => "azButton",
      :tt_requireNextClick => true, :tt_onLoad => "$('nextButton').style.display = 'block';"}%>

    <%= text_field_tag "person[addresses][address1]",  params[:address1],
      {	:id => 'address1',
      :helpText => "Closest Landmark or Plot Number<br /><span class='helper'> Demographics (Edit)</span>" +
        '<div style="font-size:0.7em;font-style:italic; margin-left: 40px;">' +
        "(Please do not include these words: Next to, close, in front of, behind)</div>",
      :allowFreeText => true, :ajaxURL => '',
      :tt_pageStyleClass => "NoKeyboard",
      :tt_onLoad => "set_ajaxURL_for_suggestions('/people/landmark?filter_value=' ,document.getElementById('person_addresses_city_village').value);$('nextButton').style.display = 'block';" }%>


  <%when 'home_district'%>

    <%= text_field "region" , 'region_name', :helpText => "Home Address<span class='helper'> Demographics (Edit)</span>",
      :tt_pageStyleClass => "NoKeyboard",
      :ajaxURL => '/people/region/Region?field=role&value=',
      :tt_BeforeUnLoad => "verifyFields(1)",
      :tt_onLoad => "showNext(); ajaxifyDistricts();" if ask_home_village %></p>

    <%= text_field_tag "person[addresses][address2]", params[:address2], {:id => 'address2',
      :ajaxURL => '', :field_type => 'alpha',
      :helpText => 'Home District',
      :allowFreeText => false,
      :condition => 'false' } if ask_home_village %>


    <%= text_field_tag "person[addresses][county_district]",  params[:address2],
      {:field_type => 'alpha',
      :helpText => "Home Traditional Authority (TA)<span class='helper'> Demographics (Edit)</span>",
      :ajaxURL => '/search/ta?search_string=',
      :allowFreeText => false,
      :tt_requireNextClick => false,
      :tt_onLoad => "$('nextButton').style.display = 'none'; set_ajaxURL_for_suggestions('/people/traditional_authority/TraditionalAuthority?filter_value=' ,document.getElementById('address2').value);"
    }%>

    <%= text_field_tag "person[addresses][neighborhood_cell]", params[:city_village],
      {
      :field_type => 'alpha',
      :helpText => "Home Village<span class='helper'> Demographics (Edit)</span>",
      :tt_requireNextClick => true,
      :tt_pageStyleClass => "azButton",
      :ajaxURL => '/people/village?search_string=',
      :allowFreeText => false ,
      :tt_onLoad => "$('nextButton').style.display = 'block'; set_ajaxURL_for_suggestions('/people/village/Village?filter_value=' ,document.getElementById('person_addresses_county_district').value);"}%>


  <%when 'primary_phone'%>
    <%= text_field_tag "person[attributes][cell_phone_number]",  nil, :field_type => 'number', :helpText => "Primary Phone Number<span class='helper'> Demographics (Edit)</span>", :allowFreeText => "true", :validationRule => "^0\\d{9}$|Unknown|Not Available", :validationMessage => "Not a valid phone number"%>

  <%when 'secondary_phone'%>
    <%= text_field_tag "person[attributes][home_phone_number]",  nil, :field_type => 'number', :helpText => "Secondary Phone Number<span class='helper'> Demographics (Edit)</span>", :allowFreeText => "true", :validationRule => "^0\\d{7}$|Unknown|Not Available|^0\\d{9}$", :validationMessage => "Not a valid phone number"%>

  <%when 'citizenship'%>


    <%= select_tag("person[attributes][citizenship]", options_for_select([" ", "Malawian", "Other"], params[:citizenship]),
      :helpText =>"Nationality<span class='helper'> Demographics (Edit)</span>",
      :field_type => 'text') %>

    <%= text_field_tag "person[attributes][race]", nil,
      {:id => "race",
      :helptext => "Specify nationality<span class='helper'> Demographics (Edit)</span>",
      :allowFreeText => true,
      :tt_BeforeUnLoad => "$('person_attributes_citizenship').value = $('race').value",
      :ajaxURL => "/people/static_nationalities?&search_string=",
      :condition => '($("person_attributes_citizenship").value != "Malawian")' } %>

  <%when 'occupation'%>
    <%= select_tag "person[attributes][occupation]", options_for_select([" ", "Housewife", "Farmer", "Police", "Soldier", "Business", "Teacher", "Student", "Healthcare Worker"].sort.concat(["Other"]), params[:occupation]), {:helpText => "Occupation<span class='helper'> Demographics (Edit)</span>"}%>
  <%end%>

  <!-- Make sure patient is created -->

  <%= hidden_field_tag("person_id", @person.id) %>
  <%= hidden_field_tag("patient_id", @patient.id) %>
  <%= hidden_field_tag("cat", params[:cat]) %>

  <%= submit_tag "Update person" %>

<% end %>
